name: "Demo"
on:
  push:
    branches:
      - master
      
jobs:
  login-to-amazon-ecr:
    name: "Demo"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: 'false'
  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@e0e8747501f8269dadc2efec9e104c2d5843bc3b
    outputs:
      docker_username: ${{ steps.login-ecr.outputs.docker_username_<aws-account-id>_dkr_ecr_us_east_1_amazonaws_com }}
      docker_password: ${{ steps.login-ecr.outputs.docker_password_<aws-account-id>_dkr_ecr_us_east_1_amazonaws_com }}
  
#   run-with-internal-service:
#     name: Run something with an internal image as service
#     needs: login-to-amazon-ecr
#     runs-on: ubuntu-latest
#     services:
#       internal-service:
#         image: <image_uri>
#         credentials:
#           username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
#           password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
#         ports:
#           - '80:80'
#     steps:
#       - name: Echo
#         run: echo "<image_uri>" 
